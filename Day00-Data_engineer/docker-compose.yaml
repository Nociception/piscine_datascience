# env_file key is manually added in each service.
# It seems that docker-compose automatic .env file works
# with a cache file, which leads to .env updates fail.

services:

  postgres:
    env_file:
      - .env
    build:
      context: .
      # Allows the build process to find any file involved in a COPY,
      # or similar commands.
      dockerfile: ${POSTGRES_DOCKERFILE}
    container_name: ${POSTGRES_CONTAINER}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./${SUBJECT_DIR}:/${DATA_VOLUME}
    networks:
      - ${DC_NETWORK}
  
  adminer:
    env_file:
      - .env
    image: adminer:latest
    container_name: ${ADMINER_CONTAINER}
    ports:
      - "${ADMINER_PORT}:${ADMINER_PORT}"
    networks:
      - ${DC_NETWORK}

  python:
    env_file:
      - .env
    build:
      context: .
      dockerfile: ${PYTHON_DOCKERFILE}
    container_name: ${PYTHON_CONTAINER}
    volumes:
      - ./${SUBJECT_DIR}:/${DATA_VOLUME}
      - ./${APP_DIR}:/${APP_DIR}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: ${POSTGRES_PORT}
    networks:
      - ${DC_NETWORK}
    command: ["bash"]
    tty: true


networks:
  network:
    driver: bridge


volumes:
  postgres_data:
    driver: local
